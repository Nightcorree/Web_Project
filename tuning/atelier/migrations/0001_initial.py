# Generated by Django 5.2.1 on 2025-06-16 00:05

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='OrderStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название статуса')),
            ],
            options={
                'verbose_name': 'Статус заказа',
                'verbose_name_plural': 'Статусы заказов',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название роли')),
            ],
            options={
                'verbose_name': 'Роль',
                'verbose_name_plural': 'Роли',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Название категории')),
            ],
            options={
                'verbose_name': 'Категория услуг',
                'verbose_name_plural': 'Категории услуг',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('full_name', models.CharField(blank=True, max_length=255, verbose_name='ФИО')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телефон')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('roles', models.ManyToManyField(blank=True, to='atelier.role', verbose_name='Роли')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['full_name'],
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('content', models.TextField(verbose_name='Содержание')),
                ('publication_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата публикации')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Статья блога',
                'verbose_name_plural': 'Статьи блога',
                'ordering': ['-publication_date'],
            },
        ),
        migrations.CreateModel(
            name='ClientCar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('make', models.CharField(max_length=100, verbose_name='Марка')),
                ('model', models.CharField(max_length=100, verbose_name='Модель')),
                ('year_of_manufacture', models.PositiveSmallIntegerField(verbose_name='Год выпуска')),
                ('vin_number', models.CharField(blank=True, max_length=17, null=True, unique=True, verbose_name='VIN-номер')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Владелец')),
            ],
            options={
                'verbose_name': 'Автомобиль клиента',
                'verbose_name_plural': 'Автомобили клиентов',
                'ordering': ['make', 'model'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('planned_completion_date', models.DateField(blank=True, null=True, verbose_name='Планируемая дата завершения')),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Итоговая стоимость')),
                ('client_comment', models.TextField(blank=True, null=True, verbose_name='Комментарий клиента')),
                ('urgency', models.CharField(choices=[('NRM', 'Обычная'), ('URG', 'Срочная'), ('VUR', 'Очень срочная (вне очереди)')], default='NRM', max_length=3, verbose_name='Срочность заказа')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='atelier.clientcar', verbose_name='Автомобиль')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='created_orders', to=settings.AUTH_USER_MODEL, verbose_name='Клиент')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderPerformer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_in_order', models.CharField(blank=True, max_length=100, null=True, verbose_name='Роль сотрудника в заказе')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='atelier.order', verbose_name='Заказ')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Исполнитель')),
            ],
            options={
                'verbose_name': 'Исполнитель заказа',
                'verbose_name_plural': 'Исполнители заказов',
                'unique_together': {('order', 'user')},
            },
        ),
        migrations.AddField(
            model_name='order',
            name='performers',
            field=models.ManyToManyField(blank=True, related_name='executed_orders', through='atelier.OrderPerformer', to=settings.AUTH_USER_MODEL, verbose_name='Исполнители'),
        ),
        migrations.AddField(
            model_name='order',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='atelier.orderstatus', verbose_name='Статус'),
        ),
        migrations.CreateModel(
            name='PortfolioProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=200, verbose_name='Название проекта')),
                ('work_description', models.TextField(verbose_name='Описание доработок')),
                ('publication_date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата публикации')),
                ('base_order', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='atelier.order', verbose_name='Заказ-основа')),
                ('car', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='atelier.clientcar', verbose_name='Демонстрируемый автомобиль')),
            ],
            options={
                'verbose_name': 'Проект портфолио',
                'verbose_name_plural': 'Проекты портфолио',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_text', models.TextField(verbose_name='Текст отзыва')),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Оценка (1-5)')),
                ('review_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата отзыва')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='atelier.order', verbose_name='Заказ')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор отзыва')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'ordering': ['-review_date'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название услуги')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Базовая цена')),
                ('promotional_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Акционная цена')),
                ('promotion_ends_on', models.DateField(blank=True, null=True, verbose_name='Акция действует до')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='atelier.servicecategory', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Услуга',
                'verbose_name_plural': 'Услуги',
                'ordering': ['category__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена позиции')),
                ('item_comment', models.TextField(blank=True, null=True, verbose_name='Комментарий к позиции')),
                ('quantity', models.PositiveSmallIntegerField(default=1, verbose_name='Количество')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='atelier.order', verbose_name='Заказ')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='atelier.service', verbose_name='Услуга')),
            ],
            options={
                'verbose_name': 'Позиция заказа',
                'verbose_name_plural': 'Позиции заказа',
                'unique_together': {('order', 'service')},
            },
        ),
    ]
